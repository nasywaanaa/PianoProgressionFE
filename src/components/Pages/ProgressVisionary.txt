// import React, { useState, useEffect } from 'react';
// import axios from 'axios';

// const ProgressVisionary = () => {
//   const [tasks, setTasks] = useState([]);
//   const [schedules, setSchedules] = useState([]);
//   const [newTask, setNewTask] = useState({
//     title: '',
//     writer: '',
//     grade: '',
//     additionalMaterial: '',
//     notes: '',
//     deadline: ''
//   });

//   const [loading, setLoading] = useState(false);

//   const API_BASE_URL = 'http://localhost:8080';

//   const fetchTasks = async () => {
//     try {
//       setLoading(true);
//       const response = await axios.get(`${API_BASE_URL}/tasks`, {
//         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }
//       });
//       setTasks(response.data.data);
//     } catch (error) {
//       console.error('Error fetching tasks:', error);
//     } finally {
//       setLoading(false);
//     }
//   };

//   const fetchSchedules = async () => {
//     try {
//       const response = await axios.get(`${API_BASE_URL}/schedule`, {
//         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }
//       });
//       setSchedules(response.data.data);
//     } catch (error) {
//       console.error('Error fetching schedules:', error);
//     }
//   };

//   const handleAddTask = async () => {
//     try {
//       const response = await axios.post(`${API_BASE_URL}/tasks`, newTask, {
//         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }
//       });
//       setTasks([...tasks, response.data.data]);
//       setNewTask({ title: '', writer: '', grade: '', additionalMaterial: '', notes: '', deadline: '' });
//     } catch (error) {
//       console.error('Error adding task:', error);
//     }
//   };

//   const handleDeleteTask = async (taskId) => {
//     try {
//       await axios.delete(`${API_BASE_URL}/tasks/${taskId}`, {
//         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }
//       });
//       setTasks(tasks.filter((task) => task._id !== taskId));
//     } catch (error) {
//       console.error('Error deleting task:', error);
//     }
//   };

//   const handleGenerateSchedule = async () => {
//     try {
//       const response = await axios.post(`${API_BASE_URL}/schedule/generate`, {}, {
//         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }
//       });
//       setSchedules(response.data.data);
//     } catch (error) {
//       console.error('Error generating schedule:', error);
//     }
//   };

//   const handleDeleteAllSchedules = async () => {
//     try {
//       await axios.delete(`${API_BASE_URL}/schedule`, {
//         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }
//       });
//       setSchedules([]);
//     } catch (error) {
//       console.error('Error deleting schedules:', error);
//     }
//   };

//   useEffect(() => {
//     fetchTasks();
//     fetchSchedules();
//   }, []);

//   return (
//     <div className="progress-visionary">
//       <h1>Progress Visionary</h1>

//       <section>
//         <h2>Tasks</h2>
//         <div>
//           {loading ? (
//             <p>Loading tasks...</p>
//           ) : (
//             tasks.map((task) => (
//               <div key={task._id}>
//                 <h3>{task.title}</h3>
//                 <p>Writer: {task.writer}</p>
//                 <p>Deadline: {new Date(task.deadline).toLocaleString()}</p>
//                 <button onClick={() => handleDeleteTask(task._id)}>Delete</button>
//               </div>
//             ))
//           )}
//         </div>

//         <div>
//           <h3>Add New Task</h3>
//           <input
//             type="text"
//             placeholder="Title"
//             value={newTask.title}
//             onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}
//           />
//           <input
//             type="text"
//             placeholder="Writer"
//             value={newTask.writer}
//             onChange={(e) => setNewTask({ ...newTask, writer: e.target.value })}
//           />
//           <input
//             type="datetime-local"
//             value={newTask.deadline}
//             onChange={(e) => setNewTask({ ...newTask, deadline: e.target.value })}
//           />
//           <button onClick={handleAddTask}>Add Task</button>
//         </div>
//       </section>

//       <section>
//         <h2>Schedules</h2>
//         <div>
//           {schedules.map((schedule) => (
//             <div key={schedule._id}>
//               <h3>Task: {schedule.taskId.title}</h3>
//               <p>Date: {new Date(schedule.date).toLocaleString()}</p>
//             </div>
//           ))}
//         </div>
//         <button onClick={handleGenerateSchedule}>Generate Schedule</button>
//         <button onClick={handleDeleteAllSchedules}>Delete All Schedules</button>
//       </section>
//     </div>
//   );
// };

// export default ProgressVisionary;
